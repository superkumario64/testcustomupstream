{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
{#<article id="node-{{ node.id }}" {{ attributes }}>#}

{#  {{ title_prefix }}#}
{#  {% if not page %}#}
{#    <h2{{ title_attributes }}>#}
{#      <a href="{{ url }}" rel="bookmark">{{ label }}</a>#}
{#    </h2>#}
{#  {% endif %}#}
{#  {{ title_suffix }}#}

{#  {% if display_submitted %}#}
{#    <div class="posted">#}
{#      {{ author_picture }}#}
{#      <div{{ author_attributes }}>#}
{#        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}#}
{#        {{ metadata }}#}
{#      </div>#}
{#    </div>#}
{#  {% endif %}#}

{#  #}{# We hide the comments and links now so that we can render them later. #}
{#  <div{{ content_attributes }}>#}
{#    {{ content|without('comment', 'links', 'field_tags') }}#}
{#  </div>#}

{#  {% if content.field_tags|length and not is_front %}#}
{#    {{ content.field_tags }}#}
{#  {% endif %}#}

{#  {{ content.links }}#}
{#  {{ content.comment }}#}
{#</article>#}
<div id="page-content" data-mutate="9pmtke-sticky" data-events="mutate">
<div data-sticky-container="" class="show-for-large sticky-container" style="height: 59.1563px;">
  <div class="image-gallery-toc sticky is-at-top is-stuck" data-sticky="zbflgi-sticky" data-sticky-on="small" data-anchor="page-content" data-options="marginTop:0; stickyOn: small;" data-resize="9pmtke-sticky" data-mutate="9pmtke-sticky" data-events="mutate" style="max-width: 1903px; margin-top: 0em; bottom: auto; top: 0px;">
    <h1>{{ node.title.0.value }}</h1>
    <div class="gallery-toc-links">
      <a class="button clear show-for-xlarge" href="#gallery-description" data-smooth-scroll="ccumbg-smooth-scroll" id="jon5vw-smooth-scroll"><i class="fas fa-info"></i> Gallery Description</a>
      <a class="button clear" href="javascript:void(0)" data-toggle="social-sharing-2" aria-controls="social-sharing-2"><i class="fas fa-share-alt"></i> Share</a>
    </div>
    <div class="social-sharing ribbon-docked" id="social-sharing-2" data-toggler="skekcn-toggler" data-animate="fade-in fade-out" aria-expanded="false">
      {{ drupal_block('kwall_share_bar_block', {'use_module_css': false}) }}
    </div>
  </div>
</div>
<section id="gallery-description">
  <div class="grid-container">
    <!-- <section class="heading">
        <h2 class="underline">2014 Photo Contest winners</h2>
    </section> -->
    <section class="content-centered tighten">
      <p class="lead">{{ content.field_caption_formatted.0['#text']|striptags }}</p>
      <div class="hide-for-large">
        <div class="social-sharing">
          {{ drupal_block('kwall_share_bar_block', {'use_module_css': false}) }}
        </div>
      </div>
    </section>
  </div>
</section>
<div class="gallery-images" id="gallery-images">
  <div class="grid-container large">
    {% for key, item in content.field_images if key|first != '#' %}
      {% if key matches '/^\\d+$/' %}
        {% set image_url = file_url(item['#item'].entity.uri.value) %}
        {% set image_url = file_url(item['#media'].field_media_image.entity.uri.value) %}
        <div class="landscape gallery-image wow" id="gallery-image-{{ key }}"
             style="visibility: hidden; animation-name: none;">
          <figure class="img-full">
            <img src="{{ image_url }}" />
            <figcaption>
              <div class="caption-title">{{ item['#media'].field_media_image.title }}</div>
              <div class="caption-desc">
                <p>{{ item['#media'].field_caption.value }}</p>
              </div>
            </figcaption>
          </figure>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/wow/1.1.2/wow.min.js"></script>
<script>
  var wow = new WOW();
  wow.init();
</script>
